version: '3.8'

networks:
  yangtze-network:
    driver: bridge

services:
  yangtze-prod:
    container_name: yangtze-app
    build:
      context: .
      dockerfile: Dockerfile.prod
    env_file:
      - .env
      # - .env.production
    restart: always
    ports:
      - 3000:3000
    networks:
      - yangtze-network
    depends_on:
      mysql:
        condition: service_healthy

  # mysql:
  #   image: mysql:8.0
  #   container_name: yangtze-mysql
  #   command: --default-authentication-plugin=caching_sha2_password
  #   restart: unless-stopped
  #   # volumes:
  #   #   - ./docker/data/mysql/:/var/lib/mysql/
  #   environment:
  #     - MYSQL_ROOT_PASSWORD=admin
  #     - MYSQL_DATABASE=yangtze
  #     - MYSQL_USER=yangtze
  #     - MYSQL_PASSWORD=cpZfriEBbmJjWeiR
  #   ports:
  #     - '3306:3306'
  #   healthcheck:
  #     test: ['CMD', 'mysqladmin', 'ping', '-h127.0.0.1', '-P3306']
  #     interval: 5s
  #     timeout: 2s
  #     retries: 20
  #   networks:
  #     - yangtze-network

  nginx:
    image: nginx
    container_name: yangtze-app-nginx
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf
      # - ./docker/ssl/yangtze.zeabur.app.key:/etc/nginx/ssl/yangtze.zeabur.app.key
      # - ./docker/ssl/yangtze.zeabur.app.pem:/etc/nginx/ssl/yangtze.zeabur.app.pem
    ports:
      - 80:80
      - 443:443
    restart: always
    networks:
      - yangtze-network
    depends_on:
      - yangtze-prod
# docker-compose up -f docker-compose.prod.yaml --force-recreate --build
